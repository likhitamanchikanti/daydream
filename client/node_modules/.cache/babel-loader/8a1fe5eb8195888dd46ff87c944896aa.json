{"ast":null,"code":"'use strict';\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst toError = require('../utils').toError;\n\nclass FindOneOperation extends OperationBase {\n  constructor(collection, query, options) {\n    super(options);\n    this.collection = collection;\n    this.query = query;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const query = this.query;\n    const options = this.options;\n    const cursor = coll.find(query, options).limit(-1).batchSize(1); // Return the item\n\n    cursor.next((err, item) => {\n      if (err != null) return handleCallback(callback, toError(err), null);\n      handleCallback(callback, null, item);\n    });\n  }\n\n}\n\nmodule.exports = FindOneOperation;","map":{"version":3,"sources":["C:/Users/mehta/daydream/node_modules/mongodb/lib/operations/find_one.js"],"names":["handleCallback","require","OperationBase","toError","FindOneOperation","constructor","collection","query","options","execute","callback","coll","cursor","find","limit","batchSize","next","err","item","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,cAA3C;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,MAAMC,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBE,OAApC;;AAEA,MAAMC,gBAAN,SAA+BF,aAA/B,CAA6C;AAC3CG,EAAAA,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoBC,OAApB,EAA6B;AACtC,UAAMA,OAAN;AAEA,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEDE,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB,UAAMC,IAAI,GAAG,KAAKL,UAAlB;AACA,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB;AAEA,UAAMI,MAAM,GAAGD,IAAI,CAChBE,IADY,CACPN,KADO,EACAC,OADA,EAEZM,KAFY,CAEN,CAAC,CAFK,EAGZC,SAHY,CAGF,CAHE,CAAf,CALgB,CAUhB;;AACAH,IAAAA,MAAM,CAACI,IAAP,CAAY,CAACC,GAAD,EAAMC,IAAN,KAAe;AACzB,UAAID,GAAG,IAAI,IAAX,EAAiB,OAAOjB,cAAc,CAACU,QAAD,EAAWP,OAAO,CAACc,GAAD,CAAlB,EAAyB,IAAzB,CAArB;AACjBjB,MAAAA,cAAc,CAACU,QAAD,EAAW,IAAX,EAAiBQ,IAAjB,CAAd;AACD,KAHD;AAID;;AAvB0C;;AA0B7CC,MAAM,CAACC,OAAP,GAAiBhB,gBAAjB","sourcesContent":["'use strict';\r\n\r\nconst handleCallback = require('../utils').handleCallback;\r\nconst OperationBase = require('./operation').OperationBase;\r\nconst toError = require('../utils').toError;\r\n\r\nclass FindOneOperation extends OperationBase {\r\n  constructor(collection, query, options) {\r\n    super(options);\r\n\r\n    this.collection = collection;\r\n    this.query = query;\r\n  }\r\n\r\n  execute(callback) {\r\n    const coll = this.collection;\r\n    const query = this.query;\r\n    const options = this.options;\r\n\r\n    const cursor = coll\r\n      .find(query, options)\r\n      .limit(-1)\r\n      .batchSize(1);\r\n\r\n    // Return the item\r\n    cursor.next((err, item) => {\r\n      if (err != null) return handleCallback(callback, toError(err), null);\r\n      handleCallback(callback, null, item);\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = FindOneOperation;\r\n"]},"metadata":{},"sourceType":"script"}