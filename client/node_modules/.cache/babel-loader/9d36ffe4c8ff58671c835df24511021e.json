{"ast":null,"code":"'use strict';\n\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\n\nconst AuthProvider = require('./auth_provider').AuthProvider; // TODO: can we get the Binary type from this.bson instead?\n\n\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n/**\r\n * Creates a new Plain authentication mechanism\r\n *\r\n * @extends AuthProvider\r\n */\n\nclass Plain extends AuthProvider {\n  /**\r\n   * Implementation of authentication for a single connection\r\n   * @override\r\n   */\n  _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\n    const username = credentials.username;\n    const password = credentials.password;\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n    sendAuthCommand(connection, '$external.$cmd', command, callback);\n  }\n\n}\n\nmodule.exports = Plain;","map":{"version":3,"sources":["C:/Users/mehta/daydream/node_modules/mongodb/lib/core/auth/plain.js"],"names":["retrieveBSON","require","AuthProvider","BSON","Binary","Plain","_authenticateSingleConnection","sendAuthCommand","connection","credentials","callback","username","password","payload","command","saslStart","mechanism","autoAuthorize","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,YAApD;;AACA,MAAME,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,YAAhD,C,CAEA;;;AACA,MAAMC,IAAI,GAAGH,YAAY,EAAzB;AACA,MAAMI,MAAM,GAAGD,IAAI,CAACC,MAApB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAN,SAAoBH,YAApB,CAAiC;AAC/B;AACF;AACA;AACA;AACEI,EAAAA,6BAA6B,CAACC,eAAD,EAAkBC,UAAlB,EAA8BC,WAA9B,EAA2CC,QAA3C,EAAqD;AAChF,UAAMC,QAAQ,GAAGF,WAAW,CAACE,QAA7B;AACA,UAAMC,QAAQ,GAAGH,WAAW,CAACG,QAA7B;AACA,UAAMC,OAAO,GAAG,IAAIT,MAAJ,CAAY,OAAMO,QAAS,OAAMC,QAAS,EAA1C,CAAhB;AACA,UAAME,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAE,CADG;AAEdC,MAAAA,SAAS,EAAE,OAFG;AAGdH,MAAAA,OAAO,EAAEA,OAHK;AAIdI,MAAAA,aAAa,EAAE;AAJD,KAAhB;AAOAV,IAAAA,eAAe,CAACC,UAAD,EAAa,gBAAb,EAA+BM,OAA/B,EAAwCJ,QAAxC,CAAf;AACD;;AAjB8B;;AAoBjCQ,MAAM,CAACC,OAAP,GAAiBd,KAAjB","sourcesContent":["'use strict';\r\n\r\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\r\nconst AuthProvider = require('./auth_provider').AuthProvider;\r\n\r\n// TODO: can we get the Binary type from this.bson instead?\r\nconst BSON = retrieveBSON();\r\nconst Binary = BSON.Binary;\r\n\r\n/**\r\n * Creates a new Plain authentication mechanism\r\n *\r\n * @extends AuthProvider\r\n */\r\nclass Plain extends AuthProvider {\r\n  /**\r\n   * Implementation of authentication for a single connection\r\n   * @override\r\n   */\r\n  _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\r\n    const username = credentials.username;\r\n    const password = credentials.password;\r\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\r\n    const command = {\r\n      saslStart: 1,\r\n      mechanism: 'PLAIN',\r\n      payload: payload,\r\n      autoAuthorize: 1\r\n    };\r\n\r\n    sendAuthCommand(connection, '$external.$cmd', command, callback);\r\n  }\r\n}\r\n\r\nmodule.exports = Plain;\r\n"]},"metadata":{},"sourceType":"script"}