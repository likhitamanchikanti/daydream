{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst OperationBase = require('./operation').OperationBase;\n\nclass CloseOperation extends OperationBase {\n  constructor(client, force) {\n    super();\n    this.client = client;\n    this.force = force;\n  }\n\n  execute(callback) {\n    const client = this.client;\n    const force = this.force;\n\n    const completeClose = err => {\n      client.emit('close', client);\n\n      for (const item of client.s.dbCache) {\n        item[1].emit('close', client);\n      }\n\n      client.removeAllListeners('close');\n      callback(err, null);\n    };\n\n    if (client.topology == null) {\n      completeClose();\n      return;\n    }\n\n    client.topology.close(force, err => {\n      const autoEncrypter = client.topology.s.options.autoEncrypter;\n\n      if (!autoEncrypter) {\n        completeClose(err);\n        return;\n      }\n\n      autoEncrypter.teardown(force, err2 => completeClose(err || err2));\n    });\n  }\n\n}\n\ndefineAspects(CloseOperation, [Aspect.SKIP_SESSION]);\nmodule.exports = CloseOperation;","map":{"version":3,"sources":["C:/Users/mehta/daydream/node_modules/mongodb/lib/operations/close.js"],"names":["Aspect","require","defineAspects","OperationBase","CloseOperation","constructor","client","force","execute","callback","completeClose","err","emit","item","s","dbCache","removeAllListeners","topology","close","autoEncrypter","options","teardown","err2","SKIP_SESSION","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;;AAEA,MAAMC,cAAN,SAA6BD,aAA7B,CAA2C;AACzCE,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgB;AACzB;AACA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEDC,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB,UAAMH,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,KAAK,GAAG,KAAKA,KAAnB;;AACA,UAAMG,aAAa,GAAGC,GAAG,IAAI;AAC3BL,MAAAA,MAAM,CAACM,IAAP,CAAY,OAAZ,EAAqBN,MAArB;;AACA,WAAK,MAAMO,IAAX,IAAmBP,MAAM,CAACQ,CAAP,CAASC,OAA5B,EAAqC;AACnCF,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQD,IAAR,CAAa,OAAb,EAAsBN,MAAtB;AACD;;AAEDA,MAAAA,MAAM,CAACU,kBAAP,CAA0B,OAA1B;AACAP,MAAAA,QAAQ,CAACE,GAAD,EAAM,IAAN,CAAR;AACD,KARD;;AAUA,QAAIL,MAAM,CAACW,QAAP,IAAmB,IAAvB,EAA6B;AAC3BP,MAAAA,aAAa;AACb;AACD;;AAEDJ,IAAAA,MAAM,CAACW,QAAP,CAAgBC,KAAhB,CAAsBX,KAAtB,EAA6BI,GAAG,IAAI;AAClC,YAAMQ,aAAa,GAAGb,MAAM,CAACW,QAAP,CAAgBH,CAAhB,CAAkBM,OAAlB,CAA0BD,aAAhD;;AACA,UAAI,CAACA,aAAL,EAAoB;AAClBT,QAAAA,aAAa,CAACC,GAAD,CAAb;AACA;AACD;;AAEDQ,MAAAA,aAAa,CAACE,QAAd,CAAuBd,KAAvB,EAA8Be,IAAI,IAAIZ,aAAa,CAACC,GAAG,IAAIW,IAAR,CAAnD;AACD,KARD;AASD;;AAlCwC;;AAqC3CpB,aAAa,CAACE,cAAD,EAAiB,CAACJ,MAAM,CAACuB,YAAR,CAAjB,CAAb;AAEAC,MAAM,CAACC,OAAP,GAAiBrB,cAAjB","sourcesContent":["'use strict';\r\n\r\nconst Aspect = require('./operation').Aspect;\r\nconst defineAspects = require('./operation').defineAspects;\r\nconst OperationBase = require('./operation').OperationBase;\r\n\r\nclass CloseOperation extends OperationBase {\r\n  constructor(client, force) {\r\n    super();\r\n    this.client = client;\r\n    this.force = force;\r\n  }\r\n\r\n  execute(callback) {\r\n    const client = this.client;\r\n    const force = this.force;\r\n    const completeClose = err => {\r\n      client.emit('close', client);\r\n      for (const item of client.s.dbCache) {\r\n        item[1].emit('close', client);\r\n      }\r\n\r\n      client.removeAllListeners('close');\r\n      callback(err, null);\r\n    };\r\n\r\n    if (client.topology == null) {\r\n      completeClose();\r\n      return;\r\n    }\r\n\r\n    client.topology.close(force, err => {\r\n      const autoEncrypter = client.topology.s.options.autoEncrypter;\r\n      if (!autoEncrypter) {\r\n        completeClose(err);\r\n        return;\r\n      }\r\n\r\n      autoEncrypter.teardown(force, err2 => completeClose(err || err2));\r\n    });\r\n  }\r\n}\r\n\r\ndefineAspects(CloseOperation, [Aspect.SKIP_SESSION]);\r\n\r\nmodule.exports = CloseOperation;\r\n"]},"metadata":{},"sourceType":"script"}