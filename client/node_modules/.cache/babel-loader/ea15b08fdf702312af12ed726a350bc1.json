{"ast":null,"code":"'use strict';\n/**\r\n * The **WriteConcern** class is a class that represents a MongoDB WriteConcern.\r\n * @class\r\n * @property {(number|string)} w The write concern\r\n * @property {number} wtimeout The write concern timeout\r\n * @property {boolean} j The journal write concern\r\n * @property {boolean} fsync The file sync write concern\r\n * @see https://docs.mongodb.com/manual/reference/write-concern/index.html\r\n */\n\nclass WriteConcern {\n  /**\r\n   * Constructs a WriteConcern from the write concern properties.\r\n   * @param {(number|string)} [w] The write concern\r\n   * @param {number} [wtimeout] The write concern timeout\r\n   * @param {boolean} [j] The journal write concern\r\n   * @param {boolean} [fsync] The file sync write concern\r\n   */\n  constructor(w, wtimeout, j, fsync) {\n    if (w != null) {\n      this.w = w;\n    }\n\n    if (wtimeout != null) {\n      this.wtimeout = wtimeout;\n    }\n\n    if (j != null) {\n      this.j = j;\n    }\n\n    if (fsync != null) {\n      this.fsync = fsync;\n    }\n  }\n  /**\r\n   * Construct a WriteConcern given an options object.\r\n   *\r\n   * @param {object} options The options object from which to extract the write concern.\r\n   * @return {WriteConcern}\r\n   */\n\n\n  static fromOptions(options) {\n    if (options == null || options.writeConcern == null && options.w == null && options.wtimeout == null && options.j == null && options.fsync == null) {\n      return;\n    }\n\n    if (options.writeConcern) {\n      return new WriteConcern(options.writeConcern.w, options.writeConcern.wtimeout, options.writeConcern.j, options.writeConcern.fsync);\n    }\n\n    return new WriteConcern(options.w, options.wtimeout, options.j, options.fsync);\n  }\n\n}\n\nmodule.exports = WriteConcern;","map":{"version":3,"sources":["C:/Users/mehta/daydream/node_modules/mongodb/lib/write_concern.js"],"names":["WriteConcern","constructor","w","wtimeout","j","fsync","fromOptions","options","writeConcern","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,YAAN,CAAmB;AACjB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,CAAD,EAAIC,QAAJ,EAAcC,CAAd,EAAiBC,KAAjB,EAAwB;AACjC,QAAIH,CAAC,IAAI,IAAT,EAAe;AACb,WAAKA,CAAL,GAASA,CAAT;AACD;;AACD,QAAIC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAKA,QAAL,GAAgBA,QAAhB;AACD;;AACD,QAAIC,CAAC,IAAI,IAAT,EAAe;AACb,WAAKA,CAAL,GAASA,CAAT;AACD;;AACD,QAAIC,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAKA,KAAL,GAAaA,KAAb;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;;;AACoB,SAAXC,WAAW,CAACC,OAAD,EAAU;AAC1B,QACEA,OAAO,IAAI,IAAX,IACCA,OAAO,CAACC,YAAR,IAAwB,IAAxB,IACCD,OAAO,CAACL,CAAR,IAAa,IADd,IAECK,OAAO,CAACJ,QAAR,IAAoB,IAFrB,IAGCI,OAAO,CAACH,CAAR,IAAa,IAHd,IAICG,OAAO,CAACF,KAAR,IAAiB,IANrB,EAOE;AACA;AACD;;AAED,QAAIE,OAAO,CAACC,YAAZ,EAA0B;AACxB,aAAO,IAAIR,YAAJ,CACLO,OAAO,CAACC,YAAR,CAAqBN,CADhB,EAELK,OAAO,CAACC,YAAR,CAAqBL,QAFhB,EAGLI,OAAO,CAACC,YAAR,CAAqBJ,CAHhB,EAILG,OAAO,CAACC,YAAR,CAAqBH,KAJhB,CAAP;AAMD;;AAED,WAAO,IAAIL,YAAJ,CAAiBO,OAAO,CAACL,CAAzB,EAA4BK,OAAO,CAACJ,QAApC,EAA8CI,OAAO,CAACH,CAAtD,EAAyDG,OAAO,CAACF,KAAjE,CAAP;AACD;;AAnDgB;;AAsDnBI,MAAM,CAACC,OAAP,GAAiBV,YAAjB","sourcesContent":["'use strict';\r\n\r\n/**\r\n * The **WriteConcern** class is a class that represents a MongoDB WriteConcern.\r\n * @class\r\n * @property {(number|string)} w The write concern\r\n * @property {number} wtimeout The write concern timeout\r\n * @property {boolean} j The journal write concern\r\n * @property {boolean} fsync The file sync write concern\r\n * @see https://docs.mongodb.com/manual/reference/write-concern/index.html\r\n */\r\nclass WriteConcern {\r\n  /**\r\n   * Constructs a WriteConcern from the write concern properties.\r\n   * @param {(number|string)} [w] The write concern\r\n   * @param {number} [wtimeout] The write concern timeout\r\n   * @param {boolean} [j] The journal write concern\r\n   * @param {boolean} [fsync] The file sync write concern\r\n   */\r\n  constructor(w, wtimeout, j, fsync) {\r\n    if (w != null) {\r\n      this.w = w;\r\n    }\r\n    if (wtimeout != null) {\r\n      this.wtimeout = wtimeout;\r\n    }\r\n    if (j != null) {\r\n      this.j = j;\r\n    }\r\n    if (fsync != null) {\r\n      this.fsync = fsync;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Construct a WriteConcern given an options object.\r\n   *\r\n   * @param {object} options The options object from which to extract the write concern.\r\n   * @return {WriteConcern}\r\n   */\r\n  static fromOptions(options) {\r\n    if (\r\n      options == null ||\r\n      (options.writeConcern == null &&\r\n        options.w == null &&\r\n        options.wtimeout == null &&\r\n        options.j == null &&\r\n        options.fsync == null)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (options.writeConcern) {\r\n      return new WriteConcern(\r\n        options.writeConcern.w,\r\n        options.writeConcern.wtimeout,\r\n        options.writeConcern.j,\r\n        options.writeConcern.fsync\r\n      );\r\n    }\r\n\r\n    return new WriteConcern(options.w, options.wtimeout, options.j, options.fsync);\r\n  }\r\n}\r\n\r\nmodule.exports = WriteConcern;\r\n"]},"metadata":{},"sourceType":"script"}